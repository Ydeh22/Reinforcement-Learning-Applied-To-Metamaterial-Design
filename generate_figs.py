import torch
import matplotlib.pyplot as plt
import numpy as np
from tscsRL.environments.RadiiTSCSEnv import ContinuousRadiiTSCSEnv, DiscreteRadiiTSCSEnv

large_range_initial = torch.tensor([[4.8514e-08, 6.6041e-05, 4.5780e-04, 1.4629e-03, 3.3551e-03, 6.3905e-03,
         1.0805e-02, 1.6813e-02, 2.4606e-02, 3.4351e-02, 4.6193e-02, 6.0253e-02,
         7.6631e-02, 9.5405e-02, 1.1663e-01, 1.4035e-01, 1.6659e-01, 1.9536e-01,
         2.2663e-01, 2.6041e-01, 1.0520e+00, 1.1769e+00, 1.3051e+00, 1.4356e+00,
         1.5672e+00, 1.6988e+00, 1.8295e+00, 1.9580e+00, 2.0837e+00, 2.2055e+00,
         2.3229e+00, 2.4351e+00, 2.5418e+00, 2.6426e+00, 2.7372e+00, 2.8256e+00,
         2.9077e+00, 2.9838e+00, 3.0541e+00, 3.1189e+00, 3.1786e+00, 3.2338e+00,
         3.2850e+00, 3.3329e+00, 3.3783e+00, 3.4219e+00, 3.4645e+00, 3.5071e+00,
         3.5506e+00, 3.5961e+00, 3.6444e+00, 3.6966e+00, 3.7539e+00, 3.8172e+00,
         3.8875e+00, 3.9658e+00, 4.0530e+00, 4.1499e+00, 4.2571e+00, 4.3750e+00,
         4.9465e+00, 5.1130e+00, 5.2906e+00, 5.4787e+00, 5.6764e+00, 5.8824e+00,
         6.0954e+00, 6.3136e+00, 6.5353e+00, 6.7584e+00, 6.9809e+00, 7.2009e+00,
         7.4161e+00, 7.6249e+00, 7.8253e+00, 8.0158e+00, 8.1951e+00, 8.3620e+00,
         8.5158e+00, 8.6559e+00, 8.7821e+00, 8.8946e+00, 8.9935e+00, 9.0794e+00,
         9.1532e+00, 9.2156e+00, 9.2678e+00, 9.3108e+00, 9.3458e+00, 9.3740e+00,
         9.3963e+00, 9.4140e+00, 9.4280e+00, 9.4393e+00, 9.4487e+00, 9.4570e+00,
         9.4651e+00, 9.4735e+00, 9.4829e+00, 9.5988e+00]])

large_range_final = torch.tensor([[2.4052e-08, 3.2752e-05, 2.2716e-04, 7.2635e-04, 1.6668e-03, 3.1766e-03,
         5.3732e-03, 8.3631e-03, 1.2240e-02, 1.7086e-02, 2.2969e-02, 2.9945e-02,
         3.8057e-02, 4.7334e-02, 5.7798e-02, 6.9457e-02, 8.2309e-02, 9.6346e-02,
         1.1155e-01, 1.2790e-01, 3.4966e-01, 3.8434e-01, 4.1854e-01, 4.5183e-01,
         4.8381e-01, 5.1412e-01, 5.4244e-01, 5.6849e-01, 5.9206e-01, 6.1299e-01,
         6.3118e-01, 6.4660e-01, 6.5928e-01, 6.6928e-01, 6.7676e-01, 6.8189e-01,
         6.8490e-01, 6.8607e-01, 6.8567e-01, 6.8403e-01, 6.8147e-01, 6.7833e-01,
         6.7494e-01, 6.7164e-01, 6.6873e-01, 6.6651e-01, 6.6525e-01, 6.6521e-01,
         6.6661e-01, 6.6966e-01, 6.7455e-01, 6.8144e-01, 6.9050e-01, 7.0189e-01,
         7.1578e-01, 7.3239e-01, 7.5193e-01, 7.7471e-01, 8.0106e-01, 8.3141e-01,
         9.4107e-01, 9.8519e-01, 1.0352e+00, 1.0919e+00, 1.1562e+00, 1.2292e+00,
         1.3120e+00, 1.4059e+00, 1.5119e+00, 1.6313e+00, 1.7652e+00, 1.9147e+00,
         2.0804e+00, 2.2629e+00, 2.4622e+00, 2.6780e+00, 2.9096e+00, 3.1555e+00,
         3.4139e+00, 3.6824e+00, 3.9582e+00, 4.2381e+00, 4.5187e+00, 4.7964e+00,
         5.0679e+00, 5.3297e+00, 5.5790e+00, 5.8132e+00, 6.0302e+00, 6.2283e+00,
         6.4065e+00, 6.5643e+00, 6.7016e+00, 6.8186e+00, 6.9161e+00, 6.9950e+00,
         7.0565e+00, 7.1018e+00, 7.1325e+00, 7.1495e+00]])

large_range_single_cyl = torch.tensor([[3.9478e-09, 5.3824e-06, 3.7440e-05, 1.2023e-04, 2.7747e-04, 5.3239e-04,
         9.0772e-04, 1.4256e-03, 2.1073e-03, 2.9737e-03, 4.0447e-03, 5.3394e-03,
         6.8762e-03, 8.6727e-03, 1.0745e-02, 1.3110e-02, 1.5783e-02, 1.8776e-02,
         2.2104e-02, 2.5780e-02, 9.6797e-02, 1.1164e-01, 1.2787e-01, 1.4552e-01,
         1.6463e-01, 1.8524e-01, 2.0738e-01, 2.3108e-01, 2.5635e-01, 2.8322e-01,
         3.1170e-01, 3.4179e-01, 3.7349e-01, 4.0681e-01, 4.4172e-01, 4.7821e-01,
         5.1626e-01, 5.5584e-01, 5.9691e-01, 6.3944e-01, 6.8337e-01, 7.2865e-01,
         7.7523e-01, 8.2304e-01, 8.7201e-01, 9.2206e-01, 9.7313e-01, 1.0251e+00,
         1.0779e+00, 1.1315e+00, 1.1858e+00, 1.2406e+00, 1.2958e+00, 1.3514e+00,
         1.4073e+00, 1.4634e+00, 1.5196e+00, 1.5757e+00, 1.6316e+00, 1.6874e+00,
         1.7462e+00, 1.8016e+00, 1.8566e+00, 1.9111e+00, 1.9649e+00, 2.0181e+00,
         2.0705e+00, 2.1221e+00, 2.1728e+00, 2.2226e+00, 2.2714e+00, 2.3192e+00,
         2.3659e+00, 2.4115e+00, 2.4560e+00, 2.4994e+00, 2.5415e+00, 2.5825e+00,
         2.6223e+00, 2.6609e+00, 2.6982e+00, 2.7344e+00, 2.7694e+00, 2.8031e+00,
         2.8357e+00, 2.8672e+00, 2.8975e+00, 2.9267e+00, 2.9548e+00, 2.9818e+00,
         3.0078e+00, 3.0328e+00, 3.0568e+00, 3.0798e+00, 3.1020e+00, 3.1233e+00,
         3.1437e+00, 3.1634e+00, 3.1823e+00, 3.2006e+00]])

## Change this environment to whatever one you need
env = ContinuousRadiiTSCSEnv(
    kMax=0.45,
    kMin=0.35,
    nFreq=11)

## Make sure these parameters are set from the env_params
env.ep_len = 200
env.grid_size = 10.0

initialRadii = torch.tensor([[0.3408, 0.3879, 0.4351, 0.6830, 0.5658, 0.4750, 0.2735, 0.6176, 0.4231,
         0.3406, 0.6432, 0.3376, 0.4931, 0.3234, 0.7489, 0.2258, 0.7490, 0.5567,
         0.3443]])

optimalRadii = torch.tensor([[0.6586, 0.3249, 0.2001, 0.2565, 0.2188, 0.2261, 0.2452, 0.2382, 0.3670,
         0.4731, 0.5204, 0.2172, 0.2254, 0.6366, 0.7973, 0.6570, 0.2190, 0.2592,
         0.3743]])

env.renderIMG(initialRadii)
env.renderIMG(optimalRadii)

# small_range_single_cyl = torch.tensor([[0.4629, 0.5000, 0.5385, 0.5786, 0.6201, 0.6630, 0.7073, 0.7528, 0.7996, 0.8476, 0.8967]])
# small_range_initial = torch.tensor([[2.7897, 2.8737, 2.9517, 3.0238, 3.0904, 3.1518, 3.2085, 3.2610, 3.3100, 3.3561, 3.4000]])
# small_range_final = torch.tensor([[0.6800, 0.6839, 0.6858, 0.6860, 0.6849, 0.6827, 0.6798, 0.6766, 0.6732, 0.6701, 0.6675]])

# kMin = 0.001
# kMax = 1
# nFreq = 100

# plt.figure(figsize=(10,7))
# plt.ylim(bottom=0, top=10)

# plt.xlim(left=0, right=nFreq-1)

# plt.ylabel(r'$\sigma_{RMS}$', rotation=0, fontsize=15, loc='top')
# plt.xlabel('ka', fontsize=15)

# num_ticks = 10
# plt.xticks(ticks=np.linspace(0, nFreq-1, num_ticks), labels=np.round(np.linspace(kMin, kMax, num_ticks), 3))

# plt.plot(large_range_single_cyl[0], label='Core cylinder only')
# plt.plot(large_range_initial[0], label = 'Initial random configuration')
# plt.plot(large_range_final[0], label='Optimized configuration')

# plt.grid()
# plt.legend(fontsize=15)
# plt.show()